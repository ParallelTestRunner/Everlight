// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Everlight.Testcases.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ComputerDatabase")]
    [NUnit.Framework.CategoryAttribute("ComputerDatabase")]
    public partial class ComputerDatabaseFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ComputerDatabase.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ComputerDatabase", "\tTesting of ComputerDatabase website", ProgrammingLanguage.CSharp, new string[] {
                        "ComputerDatabase"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1001- User can add a new computer")]
        [NUnit.Framework.TestCaseAttribute("Automation Computer Name", "1990-05-12", "12 May 1990", "2000-12-05", "05 Dec 2000", "IMS Associates, Inc.", "IMS Associates, Inc.", null)]
        [NUnit.Framework.TestCaseAttribute("Automation Computer Name", "", "-", "1995-02-15", "15 Feb 1995", "", "-", null)]
        [NUnit.Framework.TestCaseAttribute("Automation Computer Name", "2003-10-10", "10 Oct 2003", "", "-", "Evans & Sutherland", "Evans & Sutherland", null)]
        [NUnit.Framework.TestCaseAttribute("Automation Computer Name", "", "-", "", "-", "", "-", null)]
        public virtual void _1001_UserCanAddANewComputer(string automationComputerName, string introducedDate1, string introducedDate2, string discontinuedDate1, string discontinuedDate2, string company1, string company2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1001- User can add a new computer", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I open the home page of computer-database website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.And(string.Format("I make sure that there is no computer with name {0}", automationComputerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.When(string.Format("I go to Add-a-computer page and create a new computer with {0}, {1}, {2} and {3}", automationComputerName, introducedDate1, discontinuedDate1, company1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
testRunner.Then(string.Format("Newly created computer with {0}, {1}, {2} and {3} could be found on home page of " +
                        "computer-database website", automationComputerName, introducedDate2, discontinuedDate2, company2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1002- User can edit a computer")]
        [NUnit.Framework.TestCaseAttribute("Automation Computer Name", "2003-10-10", "10 Oct 2003", "1995-02-15", "15 Feb 1995", "Evans & Sutherland", "Evans & Sutherland", null)]
        public virtual void _1002_UserCanEditAComputer(string automationComputerName, string introducedDate1, string introducedDate2, string discontinuedDate1, string discontinuedDate2, string company1, string company2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1002- User can edit a computer", exampleTags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given("I open the home page of computer-database website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
testRunner.And(string.Format("I make sure that there is no computer with name {0}", automationComputerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
testRunner.When("I go to a random page of computer-table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
testRunner.And(string.Format("I go to edit-or-delete-computer page of a random computer and edit it with {0}, {" +
                        "1}, {2} and {3}", automationComputerName, introducedDate1, discontinuedDate1, company1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
testRunner.Then(string.Format("Edited computer with {0}, {1}, {2} and {3} could be found on home page of compute" +
                        "r-database website", automationComputerName, introducedDate2, discontinuedDate2, company2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1003- User can search and delete a computer")]
        [NUnit.Framework.TestCaseAttribute("Automation Computer Name", "1990-05-12", "12 May 1990", "2000-12-05", "05 Dec 2000", "IMS Associates, Inc.", "IMS Associates, Inc.", null)]
        public virtual void _1003_UserCanSearchAndDeleteAComputer(string automationComputerName, string introducedDate1, string introducedDate2, string discontinuedDate1, string discontinuedDate2, string company1, string company2, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1003- User can search and delete a computer", exampleTags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
testRunner.Given("I open the home page of computer-database website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
testRunner.And(string.Format("I make sure that there is no computer with name {0}", automationComputerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.When(string.Format("I go to Add-a-computer page and create a new computer with {0}, {1}, {2} and {3}", automationComputerName, introducedDate1, discontinuedDate1, company1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
testRunner.Then(string.Format("Newly created computer with {0}, {1}, {2} and {3} could be found on home page of " +
                        "computer-database website", automationComputerName, introducedDate2, discontinuedDate2, company2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
testRunner.When(string.Format("I delete a computer with {0}, {1}, {2} and {3}", automationComputerName, introducedDate2, discontinuedDate2, company2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
testRunner.Then(string.Format("Deleted computer with {0}, {1}, {2} and {3} could be not found on home page of co" +
                        "mputer-database website", automationComputerName, introducedDate2, discontinuedDate2, company2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
